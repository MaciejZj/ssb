#!/bin/sh

function usage
{
	echo \
		"Usage: $0 [-d|-g|-h|-r] [-c CSS_PATH] [-e HEADER_PATH]" \
		"[-f FOOTER_PATH] [-m MARKDOWN_RENDERER] [-o OUTPUT_DIR] [-p POSTS_DIR]"
}


function parse_optargs
{
	while getopts "dghrc:e:f:m:o:p:" opt; do
		case $opt in
			d)
				DISABLE_POSTS=true;;
			g)
				gen_template
				exit 0;;
			h)
				usage
				exit 0;;
			r)
				RECURSE_POSTS=true;;
			c)
				CSS_PATH=$OPTARG;;
			e)
				HEADER_PATH=$OPTARG;;
			f)
				FOOTER_PATH=$OPTARG;;
			m)
				MARKDOWN_RENDERER=$OPTARG;;
			o)
				OUTPUT_DIR=$OPTARG;;
			p)
				POSTS_DIR=$OPTARG;;
		esac
	done
}


function set_default_args
{
	CSS_PATH=./styles.css
	FOOTER_PATH=./footer.html
	HEADER_PATH=./header.html
	MARKDOWN_RENDERER=pandoc
	POSTS_DIR=./posts
	OUTPUT_DIR=.
}

function echo_header_template
{
	echo \
'<!DOCTYPE html>
<html lang=en>
<head>
	<meta charset="utf-8">

	<title>Title</title>

	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
<header>
<nav>
	<strong>Title</strong>&nbsp;
	<a href="./index.html">home</a>&nbsp;
	-&nbsp;
	<a href="mailto:">email</a>
</nav>
</header>
'
}


function echo_footer_template
{
	echo \
'<footer>
</footer>
</body>
</html>'
}


function echo_css_template
{
	echo \
'body {}
nav {}
h1 {}
h2 {}
h3 {}
h4 {}
h5 {}
h6 {}
p {}
a {}
a:hover {}
iframe {}
ul {}
header {}
footer {}
nav {}
hr {}
pre code {}
code {} code a {}
code a:hover {}
a code:hover {}
figure {}
figcaption {}
img {}
video {}
blockquote {}
table {}
th, td {}
li {}

@media only screen and (max-width: 600px)
{
    body {}
}

code span.al {}
code span.an {}
code span.at {}
code span.bn {}
code span.bu {}
code span.cf {}
code span.ch {}
code span.cn {}
code span.co {}
code span.cv {}
code span.do {}
code span.dt {}
code span.dv {}
code span.er {}
code span.ex {}
code span.fl {}
code span.fu {}
code span.im {}
code span.in {}
code span.kw {}
code span.op {}
code span.ot {}
code span.pp {}
code span.sc {}
code span.ss {}
code span.st {}
code span.va {}
code span.vs {}
code span.wa {}'
}


function gen_template
{
	echo_header_template > ./header.html
	echo_footer_template > ./footer.html
	echo_css_template > ./styles.css
}


function get_posts
{
	h
	if [ "$RECURSE_POSTS" = false ]; then
		DEPTH_LIMITER="-maxdepth 1"
	fi

	find $POSTS_DIR $DEPTH_LIMITER -type f -name "*.md"
}


function get_mod_date
{
	case `uname` in
		Linux)
			stat -c %y "$1" | cut -d ' ' -f 1;;
		Darwin|*BSD)
			stat -t "%Y-%m-%d" -f "%Sm" "$1";;
	esac
}


function append_posts_list
{
	posts_list="\n --- \n"
	for post in $@; do
		file_base=`basename $post .md`
		date=`get_mod_date "$post"`
		post_title=`grep -m 1 "^# .*" $post | cut -c 3-`
		post_link="$date - [$post_title]($file_base.html) <br>"
		posts_list="$posts_list $post_link"
	done
	echo $posts_list
}


function make_html_files
{
	for md_file in $@; do
		file_base=`basename $md_file .md`
		output_file="$OUTPUT_DIR/$file_base.html"
		append_posts_list $posts | cat $md_file - | $MARKDOWN_RENDERER > $output_file
		cat $HEADER_PATH $output_file $FOOTER_PATH | tee $output_file
	done
}


set_default_args
parse_optargs $@
shift `expr $OPTIND - 1`

pages="$@"
[ -z "$pages" ] && echo No markdown pages given to render && exit 1
posts=`get_posts`
md_files="$pages $posts"

make_html_files $md_files
